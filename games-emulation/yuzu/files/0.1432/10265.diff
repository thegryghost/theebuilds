diff --git a/src/input_common/helpers/joycon_protocol/joycon_types.h b/src/input_common/helpers/joycon_protocol/joycon_types.h
index b03143e04c..1c8d294b0e 100644
--- a/src/input_common/helpers/joycon_protocol/joycon_types.h
+++ b/src/input_common/helpers/joycon_protocol/joycon_types.h
@@ -394,6 +394,7 @@ enum class DriverResult {
     InvalidHandle,
     NotSupported,
     Disabled,
+    Delayed,
     Unknown,
 };
 
diff --git a/src/input_common/helpers/joycon_protocol/nfc.cpp b/src/input_common/helpers/joycon_protocol/nfc.cpp
index 77ea6d5cf2..14818ae332 100644
--- a/src/input_common/helpers/joycon_protocol/nfc.cpp
+++ b/src/input_common/helpers/joycon_protocol/nfc.cpp
@@ -72,6 +72,11 @@ DriverResult NfcProtocol::StartNFCPollingMode() {
 }
 
 DriverResult NfcProtocol::ScanAmiibo(std::vector<u8>& data) {
+    if (update_counter++ < AMIIBO_UPDATE_DELAY) {
+        return DriverResult::Delayed;
+    }
+    update_counter = 0;
+
     LOG_DEBUG(Input, "Start NFC pooling Mode");
     ScopedSetBlocking sb(this);
     DriverResult result{DriverResult::Success};
@@ -87,7 +92,7 @@ DriverResult NfcProtocol::ScanAmiibo(std::vector<u8>& data) {
         result = WaitUntilNfcIsReady();
     }
     if (result == DriverResult::Success) {
-        result = StartPolling(tag_data);
+        result = StartPolling(tag_data, 7);
     }
     if (result == DriverResult::Success) {
         result = GetAmiiboData(data);
@@ -129,9 +134,8 @@ DriverResult NfcProtocol::WaitUntilNfcIsReady() {
     return DriverResult::Success;
 }
 
-DriverResult NfcProtocol::StartPolling(TagFoundData& data) {
+DriverResult NfcProtocol::StartPolling(TagFoundData& data, std::size_t timeout_limit) {
     LOG_DEBUG(Input, "Start Polling for tag");
-    constexpr std::size_t timeout_limit = 7;
     MCUCommandResponse output{};
     std::size_t tries = 0;
 
diff --git a/src/input_common/helpers/joycon_protocol/nfc.h b/src/input_common/helpers/joycon_protocol/nfc.h
index 11e263e077..eddf5932ed 100644
--- a/src/input_common/helpers/joycon_protocol/nfc.h
+++ b/src/input_common/helpers/joycon_protocol/nfc.h
@@ -32,6 +32,8 @@ class NfcProtocol final : private JoyconCommonProtocol {
     bool IsEnabled() const;
 
 private:
+    static constexpr std::size_t AMIIBO_UPDATE_DELAY = 15;
+
     struct TagFoundData {
         u8 type;
         std::vector<u8> uuid;
@@ -39,7 +41,7 @@ class NfcProtocol final : private JoyconCommonProtocol {
 
     DriverResult WaitUntilNfcIsReady();
 
-    DriverResult StartPolling(TagFoundData& data);
+    DriverResult StartPolling(TagFoundData& data, std::size_t timeout_limit = 1);
 
     DriverResult ReadTag(const TagFoundData& data);
 
@@ -56,6 +58,7 @@ class NfcProtocol final : private JoyconCommonProtocol {
     NFCReadBlockCommand GetReadBlockCommand(NFCPages pages) const;
 
     bool is_enabled{};
+    std::size_t update_counter{};
 };
 
 } // namespace InputCommon::Joycon
